version: '3'
services: 
    flask:
        container_name: backend
        build:
            context: .
            dockerfile: ./docker/Dockerfile
        command: flask run --host=0.0.0.0
        environment: 
            - FLASK_APP=./backend/server.py
            - FLASK_DEBUG=1
            - POSTGRES_URL= "http://POSTGRES:5432"
        ports: 
             - "5000:5000"
        volumes: 
            - ./:/work
        deploy:
            resources:
                limits:
                  cpus: '2'
                  memory: '2G'
        networks:
            - connector

    postgres:
        container_name: database
        image: postgres:15.1-alpine
        environment:
            - POSTGRES_DB=diplomDB
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=admin
        ports:
            - "5432:5432"
        volumes:
            - ./sql:/docker-entrypoint-initdb.d

        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U admin -d diplomDB"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                  cpus: '2'
                  memory: '2G'
        networks:
            - connector
        
    pgadmin:
        image: dpage/pgadmin4
        depends_on:
            - postgres
        ports:
            - "5555:80"
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.ru
            PGADMIN_DEFAULT_PASSWORD: admin
            POSTGRES_URL: http://POSTGRES:5432
        restart: unless-stopped
        networks:
            - connector

networks:
  connector:
    driver: bridge
